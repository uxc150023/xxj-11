{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Print to console": {
    "scope": "javascript,typescript",
    "prefix": "log",
    "body": ["console.log($1);"],
    "description": "Log output to console"
  },
  "Try catch message": {
    "scope": "typescript",
    "prefix": "trymsg",
    "body": [
      "try {",
      "\t$1",
      "} catch (error) {",
      "\tthis.messageError(error);",
      "}"
    ],
    "description": "捕获错误并弹窗提示"
  },
  "Fetch Dictionary": {
    "scope": "typescript",
    "prefix": "fetchDictionary",
    "body": [
      "async fetchDictionary() {",
      "\t// 获取数据字典",
      "\tawait Promise.all([",
      "\t\tthis.$$store.dispatch(",
      "\t\t\t\"dictionary/actionDictionary\",",
      "\t\t\tDictionaryTypeCode.${OP_USER_PTI_EXPECTED_WORK_TYPE},",
      "\t\t),",
      "\t]);",
      "}"
    ],
    "description": "获取数据字典"
  },
  "Add computed property in Component": {
    "scope": "typescript",
    "prefix": "computed",
    "body": [
      "computed: {",
      "\t...mapGetters(\"dictionary\", [",
      "\t\t\"getDictOptions\",",
      "\t\t\"getDictOption\",",
      "\t]),",
      "},"
    ],
    "description": "在组件上添加计算属性"
  },
  "Async Fetch": {
    "scope": "typescript",
    "prefix": "asyncFetch",
    "body": [
      "async fetch$1(){",
      "\ttry {",
      "\t\tawait $2",
      "\t} catch (error) {",
      "\t\tthis.messageError(error);",
      "\t}",
      "}"
    ],
    "description": "异步获取数据的方法"
  },
  // "Await": {
  //   "scope": "typescript",
  //   "prefix": "await",
  //   "body": "await"
  // },
  "Required Validate": {
    "scope": "typescript",
    "prefix": "required",
    "body": "{ required: true, message: \"请输入$1\", trigger: \"blur\" }",
    "description": "表单验证必填配置"
  },
  "Entity Class": {
    "scope": "typescript",
    "prefix": "exportClass",
    "body": ["export class $1{", "\t$2", "}"],
    "description": "创建实体类"
  },
  "Template in Table": {
    "prefix": "template",
    "body": ["<template slot-scope=\"scope\">", "\t$1", "</template>"],
    "description": "自定义表格列"
  },
  "Template Modify Select in Table": {
    "prefix": "templateModifySelect",
    "body": [
      "<template slot-scope=\"scope\">",
      "\t<el-form-item>",
      "\t\t<span v-if=\"scope.$index === modifyRow\">",
      "\t\t\t<el-select v-model=\"model.type\"",
      "\t\t\t\t\t\t\t\t\tplaceholder=\"请选择类型\">",
      "\t\t\t\t<el-option v-for=\"(option, i) in getDictOptions(DictionaryTypeCode.OP_USER_CONTACT_TYPE)\"",
      "\t\t\t\t\t\t\t\t\t:key=\"i\"",
      "\t\t\t\t\t\t\t\t\t:label=\"option.label\"",
      "\t\t\t\t\t\t\t\t\t:value=\"option.value\"></el-option>",
      "\t\t\t</el-select>",
      "\t\t</span>",
      "\t\t<span v-else>{{ scope.row.typeName }}</span></el-form-item>",
      "</template>"
    ],
    "description": "自定义表格可编辑选择列"
  },
  "Router Link in Template": {
    "prefix": "routerLink",
    "body": "<router-link :to=\"{ name: '$1', params: { $2 }}\">$3</router-link>",
    "description": "路由调整连接"
  },
  "Scope Row": {
    "prefix": "scope",
    "body": "{{ scope.row.$1 }}",
    "description": "作用域数据读取"
  },
  "Scope Row Time": {
    "prefix": "scopeTime",
    "body": "{{ scope.row.$1 | date(\"YYYY-MM-DD\") }}",
    "description": "作用域时间数据读取"
  }
}
